/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.seas.fastfoodcompany.principal;

import es.seas.fastfoodcompany.modelo.entidades.Empleado;
import es.seas.fastfoodcompany.gestionbd.ServiceEmpleado;
import java.sql.Date;
import java.time.LocalDate;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 * Login a la aplicación Fast Food Company
 *
 * @author Manuel Antonio Romero Sánchez
 */
public class Login extends javax.swing.JFrame {
    private Empleado empleadoNuevo;
    
    /**
     * Crea un nuevo formulario Login
     */
    public Login() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * Devuelve el empleado nuevo para el cambio de empledo del TPV Táctil
     *
     * @return Empleado
     */
    public Empleado getEmpleadoNuevo() {
        return empleadoNuevo;
    }

    /**
     * Establece el empleado nuevo para el cambio de empledo del TPV Táctil
     *
     * @param empleadoNuevo Empleado
     */
    public void setEmpleadoNuevo(Empleado empleadoNuevo) {
        this.empleadoNuevo = empleadoNuevo;
    }
    
    /**
     * Devuelve el botón Login
     *
     * @return JButton
     */
    public JButton getBtnLogin() {
        return btnLogin;
    }

    /**
     * Establece el botón Login
     *
     * @param btnLogin JButton
     */
    public void setBtnLogin(JButton btnLogin) {
        this.btnLogin = btnLogin;
    }

    /**
     * Devuelve el label Password
     *
     * @return JLabel
     */
    public JLabel getLblPassword() {
        return lblPassword;
    }

    /**
     * Establece el label Password
     *
     * @param lblPassword JLabel
     */
    public void setLblPassword(JLabel lblPassword) {
        this.lblPassword = lblPassword;
    }

    /**
     * Devuelve el label Username
     *
     * @return JLabel
     */
    public JLabel getLblUsername() {
        return lblUsername;
    }

    /**
     * Establece el label Username
     *
     * @param lblUsername JLabel
     */
    public void setLblUsername(JLabel lblUsername) {
        this.lblUsername = lblUsername;
    }

    /**
     * Devuelve el panel Contenedor
     *
     * @return JPanel
     */
    public JPanel getPanelContenedor() {
        return panelContenedor;
    }

    /**
     * Establece el panel Contenedor
     *
     * @param panelContenedor JPanel
     */
    public void setPanelContenedor(JPanel panelContenedor) {
        this.panelContenedor = panelContenedor;
    }

    /**
     * Devuelve el campo de texto Password
     *
     * @return JPasswordField
     */
    public JPasswordField getTxtPassword() {
        return txtPassword;
    }

    /**
     * Establece el campo de texto Password
     *
     * @param txtPassword JPasswordField
     */
    public void setTxtPassword(JPasswordField txtPassword) {
        this.txtPassword = txtPassword;
    }

    /**
     * Devuelve el campo de texto Username
     *
     * @return JTextField
     */
    public JTextField getTxtUsername() {
        return txtUsername;
    }

    /**
     * Establece el campo de texto Username
     *
     * @param txtUsername JTextField
     */
    public void setTxtUsername(JTextField txtUsername) {
        this.txtUsername = txtUsername;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelContenedor = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login - FFC");
        setResizable(false);

        lblUsername.setText("Usuario:");

        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsernameFocusGained(evt);
            }
        });
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        lblPassword.setText("Contraseña:");

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
        });
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelContenedorLayout = new javax.swing.GroupLayout(panelContenedor);
        panelContenedor.setLayout(panelContenedorLayout);
        panelContenedorLayout.setHorizontalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogin)
                    .addGroup(panelContenedorLayout.createSequentialGroup()
                        .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword)
                            .addComponent(lblUsername))
                        .addGap(18, 18, 18)
                        .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelContenedorLayout.setVerticalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        HacerLogin();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        HacerLogin();
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusGained
        ((JTextField)evt.getComponent()).selectAll();
    }//GEN-LAST:event_txtUsernameFocusGained

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        HacerLogin();
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        ((JTextField)evt.getComponent()).selectAll();
    }//GEN-LAST:event_txtPasswordFocusGained
    
    private void HacerLogin() {
        Empleado empleado, administradorAux;
        ServiceEmpleado empleadoDAO = new ServiceEmpleado();
        boolean existeUsuarioenBD = false;
        boolean hayAdministrador = empleadoDAO.existeAdministrador();
        
        //Comprueba que haya administradores (empleados) en la base de datos.
        //Si no hay ninguno, crea un administrador por defecto para poder 
        //acceder a las pantallas de los empleados.
        //Usuario: admin | Contraseña: 1234
        if (!hayAdministrador) {
            administradorAux = new Empleado(0, "Admin", "", "", "", "", "", "",
                                "", "", "", "", Date.valueOf(LocalDate.now()), 
                                "", "", "admin", "1234", true);
        } else {
            administradorAux = null;
        }
        
        //Comprueba que no haya campos vacíos
        if (txtUsername.getText().isEmpty() || 
                txtPassword.getPassword().length == 0) {
            JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos",
            "Campo vacío", JOptionPane.ERROR_MESSAGE);
        } else {
            //Comprueba que exista el usuario introducido
            existeUsuarioenBD = empleadoDAO.existeUsuario(txtUsername.getText());
            if (existeUsuarioenBD || (hayAdministrador == false && 
                    txtUsername.getText().equals("admin"))) {
                //Guardo la contraseña en una cadena String
                String password = String.valueOf(txtPassword.getPassword());
                //Comprueba que el usuario y la contraseña sean correctos
                empleado = empleadoDAO.login(txtUsername.getText(), 
                        password);
                if (empleado != null || 
                        (hayAdministrador == false && txtUsername.getText().
                        equals("admin") && password.equals("1234"))) {
                    //Una vez comprobado que los campos están rellenos y el
                    //usuario y clave son correctos se procede a abrir
                    //la aplicación
                    if (!hayAdministrador && 
                            txtUsername.getText().equals("admin")) 
                        empleado = administradorAux;
                    
                    CargaAplicacion(empleado);
                } else {
                    JOptionPane.showMessageDialog(null, "Clave incorrecta",
                    "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Usuario no encontrado",
                    "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void CargaAplicacion(Empleado empleado) {
        FFCFrame frame = new FFCFrame(empleado);
        frame.setVisible(true);
        this.dispose();
    }
    
    /**
     * Lanzador de la aplicación
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel panelContenedor;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

}
